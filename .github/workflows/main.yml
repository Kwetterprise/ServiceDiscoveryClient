name: Build and test commit

on:
  push:
    branches:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Extract tag
      id: get_version
      run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Extract Branch Name
      run: echo "::set-env name=BRANCH::$(echo ${GITHUB_REF#refs/heads/})"
    - name: Extract Tag Name
      run: echo "::set-env name=TAG::$(echo ${GITHUB_REF#refs/tags/})"
    - name: Set Release Mode (branch == master)
      if: env.BRANCH == 'master' && env.Tag != ''
      run: echo "::set-env name=CREATE_RELEASE::true"  
    - name: Set Dry Run Mode (branch != master)
      if: env.BRANCH != 'master' || env.TAG == ''
      run: echo "::set-env name=CREATE_RELEASE::false"  
    - name: Create Release Name
      run: echo "::set-env name=RELEASE_NAME::${TAG}"
    - name: Build Info
      run: "echo Running Build $GITHUB_RUN_NUMBER on Ref $GITHUB_REF / Branch $BRANCH, Tag $TAG, Release = $RELEASE_NAME / $CREATE_RELEASE"
    - name: Checkout Code
      if: env.CREATE_RELEASE == 'true'
      uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Build solution and generate NuGet package
      run: dotnet pack -c Release -o out --include-symbols --include-source -p:PackageVersion=${{env.TAG}}
    - name: Push generated package to NuGet registry
      run: dotnet nuget push ./out/*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_API_KEY}}